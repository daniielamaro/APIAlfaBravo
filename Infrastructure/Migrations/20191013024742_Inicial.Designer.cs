// <auto-generated />
using System;
using Infrastructure.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20191013024742_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Domain.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AutorId");

                    b.Property<string>("Content");

                    b.Property<Guid?>("PublicationId");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("PublicationId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Domain.Publication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AutorId");

                    b.Property<string>("Content");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Title");

                    b.Property<Guid?>("TopicId");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("TopicId");

                    b.ToTable("Publications");
                });

            modelBuilder.Entity("Domain.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Birthdate");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Senha");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Domain.Comment", b =>
                {
                    b.HasOne("Domain.User", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId");

                    b.HasOne("Domain.Publication")
                        .WithMany("Comments")
                        .HasForeignKey("PublicationId");
                });

            modelBuilder.Entity("Domain.Publication", b =>
                {
                    b.HasOne("Domain.User", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId");

                    b.HasOne("Domain.Topic", "Topic")
                        .WithMany("RelatedPublications")
                        .HasForeignKey("TopicId");
                });
#pragma warning restore 612, 618
        }
    }
}
